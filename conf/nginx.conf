# Testé sur Nginx 1.11

worker_processes  1;
# On loggue les erreurs dans logs/error.log à partir du niveau error
error_log  logs/error.log  error;

events {
	worker_connections 1024;
}

http {
	include       	mime.types;
    default_type  	application/octet-stream;
	# Pour optimiser le serveurs statique ?
	sendfile      	on;
	# Pour optimiser les websockets ?
	tcp_nodelay		on;
	# SECURITY 1 No Nginx version in header
	server_tokens off;
	
	# SECURITY 2 : Size Limits & Buffer Overflows
	client_body_buffer_size  1K;
	client_header_buffer_size 1k;
	client_max_body_size 1k;
	large_client_header_buffers 2 1k;
	
	# SECURITY 3 : 1m set the memory zone for 32000 session
	# 503 error when limit exceeded
	limit_conn_zone $binary_remote_addr zone=addr:1m;
	
	# SECURITY 6 : useragents blacklist
	include /data/nginx/conf/userAgentsBlacklist.conf;
	
	# SECURITY 7 : referers blacklist
	include  /data/nginx/conf/referersBlacklist.conf;
	
    server {
		# Serveur marais.mooo.com sur port 80 -------------
		listen 80;
		# Serveur de prod ---------------------------------
		server_name marais.mooo.com;
		# Serveur de dev ----------------------------------
		# server_name marais.dev.com;
		
		# SECURITY 3 : only one connection by IP adress at a time
		
		# ??????????????????????????????????????????????????????
		# Limit to 1 => very slow load time for dev server (multiple .js files to be loaded)
		# To be tested on prod server
		# ??????????????????????????????????????????????????????
		
		# limit_conn addr 5;
		
		# SECURITY 4 : Only requests to marais.mooo.com are allowed, access by IP forbidden
		if ($host !~ ^(marais.mooo.com)$ ) {
			return 444; 	# NGINX non response code
		}

		# SECURITY 5 : only GET requests allowed
		if ($request_method !~ ^(GET)$ ) {
			return 444; 	# NGINX non response code
		}

		# SECURITY 6 : useragents blacklist
		if ($userAgentInBlackList) {
			return 444;		# NGINX non response code
		}
		
		# SECURITY 7 : referers blacklist
		if ($refererInBlackList) { 
			return 444; 	# NGINX non response code
		} 


		# Routage par défaut vers le proxy
		location / {
			# Proxy vers port 3000 ------------------------
			proxy_set_header X-Forwarded-For $remote_addr; # To keep IP address
			proxy_set_header Host $http_host;
			proxy_pass http://127.0.0.1:3000;

			#configure websockets handling ----------------
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
		}
		
		# Sauf pour les données /marais qui seront recherchée dans /static/marais
		location /marais {
			root /data/static;
		}

    }
}